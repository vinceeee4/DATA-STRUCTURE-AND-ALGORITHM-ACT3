package Activity3;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

public class SignUpForm extends JFrame {
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JPasswordField confirmPasswordField;

    public SignUpForm() {
        setTitle("Sign Up Form");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new GridLayout(4, 2));

        // Create components
        JLabel usernameLabel = new JLabel("Username:");
        JLabel passwordLabel = new JLabel("Password:");
        JLabel confirmPasswordLabel = new JLabel("Confirm Password:");
        usernameField = new JTextField(20);
        passwordField = new JPasswordField(20);
        confirmPasswordField = new JPasswordField(20);
        JButton signUpButton = new JButton("Sign Up");
        JButton backButton = new JButton("Back");

        // Set colors
        getContentPane().setBackground(Color.BLACK); // Background color of the frame
        
        usernameLabel.setForeground(Color.WHITE);
        passwordLabel.setForeground(Color.WHITE);
        confirmPasswordLabel.setForeground(Color.WHITE);
        
        usernameField.setBackground(Color.WHITE);
        usernameField.setForeground(Color.BLACK);
        
        passwordField.setBackground(Color.WHITE);
        passwordField.setForeground(Color.BLACK);
        
        confirmPasswordField.setBackground(Color.WHITE);
        confirmPasswordField.setForeground(Color.BLACK);

        signUpButton.setBackground(Color.GRAY);
        signUpButton.setForeground(Color.WHITE);

        backButton.setBackground(Color.GRAY);
        backButton.setForeground(Color.WHITE);

        // Add action listeners
        signUpButton.addActionListener(new SignUpAction());
        backButton.addActionListener(new BackAction());

        // Add components to the frame
        add(usernameLabel);
        add(usernameField);
        add(passwordLabel);
        add(passwordField);
        add(confirmPasswordLabel);
        add(confirmPasswordField);
        add(signUpButton);
        add(backButton);
    }

    private class SignUpAction implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String username = usernameField.getText().trim();
            String password = new String(passwordField.getPassword()).trim();
            String confirmPassword = new String(confirmPasswordField.getPassword()).trim();

            if (username.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
                JOptionPane.showMessageDialog(SignUpForm.this, "Please fill in all fields.");
            } else if (!password.equals(confirmPassword)) {
                JOptionPane.showMessageDialog(SignUpForm.this, "Passwords do not match.");
            } else {
                try (BufferedWriter writer = new BufferedWriter(new FileWriter("users.txt", true))) {
                    writer.write(username + "," + password);
                    writer.newLine();
                    JOptionPane.showMessageDialog(SignUpForm.this, "Sign up successful!");
                    dispose(); // Close sign-up form
                    new LoginForm().setVisible(true); // Open login form
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(SignUpForm.this, "Error saving user data.");
                }
            }
        }
    }

    private class BackAction implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            new LoginForm().setVisible(true);
            dispose(); // Close sign-up form
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            SignUpForm signUpForm = new SignUpForm();
            signUpForm.setVisible(true);
        });
    }
}
