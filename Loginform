package Activity3;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class LoginForm extends JFrame {
    private JTextField usernameField;
    private JPasswordField passwordField;

    public LoginForm() {
        setTitle("Login Form");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new GridLayout(3, 2));

        // Create components
        JLabel usernameLabel = new JLabel("Username:");
        JLabel passwordLabel = new JLabel("Password:");
        usernameField = new JTextField(20);
        passwordField = new JPasswordField(20);
        JButton loginButton = new JButton("Login");
        JButton signupButton = new JButton("Sign Up");

        // Set background and foreground colors
        getContentPane().setBackground(Color.BLACK);

        usernameLabel.setForeground(Color.WHITE);
        passwordLabel.setForeground(Color.WHITE);
        
        usernameField.setBackground(Color.WHITE);
        usernameField.setForeground(Color.BLACK);
        
        passwordField.setBackground(Color.WHITE);
        passwordField.setForeground(Color.BLACK);

        loginButton.setBackground(Color.GRAY);
        loginButton.setForeground(Color.WHITE);
        signupButton.setBackground(Color.GRAY);
        signupButton.setForeground(Color.WHITE);

        // Add action listeners
        loginButton.addActionListener(new LoginAction());
        signupButton.addActionListener(new SignUpAction());

        // Add components to the frame
        add(usernameLabel);
        add(usernameField);
        add(passwordLabel);
        add(passwordField);
        add(loginButton);
        add(signupButton);
    }

    private class LoginAction implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String username = usernameField.getText().trim();
            String password = new String(passwordField.getPassword()).trim();

            User user = validateCredentials(username, password);
            if (user != null) {
                new ShoppingCartGUI(user).setVisible(true);
                dispose(); // Close the login form
            } else {
                JOptionPane.showMessageDialog(LoginForm.this, "Invalid username or password.");
            }
        }
    }


    private class SignUpAction implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            new SignUpForm().setVisible(true);
            dispose(); // Close login form
        }
    }

    private User validateCredentials(String username, String password) {
        try (BufferedReader reader = new BufferedReader(new FileReader("users.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 2 && parts[0].equals(username) && parts[1].equals(password)) {
                    return new User(username, password); // Return the User object if credentials match
                }
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(LoginForm.this, "Error reading user data.");
        }
        return null; // Return null if no match is found
    }
    
  


    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            LoginForm loginForm = new LoginForm();
            loginForm.setVisible(true);
        });
    }
}
